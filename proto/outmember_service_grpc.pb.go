// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.2
// source: outmember_service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OutmemberServiceClient is the client API for OutmemberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OutmemberServiceClient interface {
	// Принятие
	AcceptBookingAsRegister(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error)
	DeclineBookingAsRegister(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error)
	// Согласование
	AcceptBookingAsAssignee(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error)
	DeclineBookingAsAssignee(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error)
	AcceptRoomAsRegister(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error)
	DeclineRoomAsRegister(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error)
	// Согласование
	AcceptRoomAsAssignee(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error)
	DeclineRoomAsAssignee(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error)
	// Регистрация
	AcceptFinalReportAsRegister(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error)
	DeclineFinalReportAsRegister(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error)
	// Согласование
	AcceptFinalReportAsAssignee(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error)
	DeclineFinalReportAsAssignee(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error)
}

type outmemberServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOutmemberServiceClient(cc grpc.ClientConnInterface) OutmemberServiceClient {
	return &outmemberServiceClient{cc}
}

func (c *outmemberServiceClient) AcceptBookingAsRegister(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error) {
	out := new(BookingResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/AcceptBookingAsRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) DeclineBookingAsRegister(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error) {
	out := new(BookingResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/DeclineBookingAsRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) AcceptBookingAsAssignee(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error) {
	out := new(BookingResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/AcceptBookingAsAssignee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) DeclineBookingAsAssignee(ctx context.Context, in *BookingRequest, opts ...grpc.CallOption) (*BookingResponse, error) {
	out := new(BookingResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/DeclineBookingAsAssignee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) AcceptRoomAsRegister(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error) {
	out := new(RoomResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/AcceptRoomAsRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) DeclineRoomAsRegister(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error) {
	out := new(RoomResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/DeclineRoomAsRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) AcceptRoomAsAssignee(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error) {
	out := new(RoomResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/AcceptRoomAsAssignee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) DeclineRoomAsAssignee(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*RoomResponse, error) {
	out := new(RoomResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/DeclineRoomAsAssignee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) AcceptFinalReportAsRegister(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error) {
	out := new(FinalReportResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/AcceptFinalReportAsRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) DeclineFinalReportAsRegister(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error) {
	out := new(FinalReportResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/DeclineFinalReportAsRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) AcceptFinalReportAsAssignee(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error) {
	out := new(FinalReportResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/AcceptFinalReportAsAssignee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outmemberServiceClient) DeclineFinalReportAsAssignee(ctx context.Context, in *FinalReportRequest, opts ...grpc.CallOption) (*FinalReportResponse, error) {
	out := new(FinalReportResponse)
	err := c.cc.Invoke(ctx, "/booking.OutmemberService/DeclineFinalReportAsAssignee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OutmemberServiceServer is the server API for OutmemberService service.
// All implementations must embed UnimplementedOutmemberServiceServer
// for forward compatibility
type OutmemberServiceServer interface {
	// Принятие
	AcceptBookingAsRegister(context.Context, *BookingRequest) (*BookingResponse, error)
	DeclineBookingAsRegister(context.Context, *BookingRequest) (*BookingResponse, error)
	// Согласование
	AcceptBookingAsAssignee(context.Context, *BookingRequest) (*BookingResponse, error)
	DeclineBookingAsAssignee(context.Context, *BookingRequest) (*BookingResponse, error)
	AcceptRoomAsRegister(context.Context, *RoomRequest) (*RoomResponse, error)
	DeclineRoomAsRegister(context.Context, *RoomRequest) (*RoomResponse, error)
	// Согласование
	AcceptRoomAsAssignee(context.Context, *RoomRequest) (*RoomResponse, error)
	DeclineRoomAsAssignee(context.Context, *RoomRequest) (*RoomResponse, error)
	// Регистрация
	AcceptFinalReportAsRegister(context.Context, *FinalReportRequest) (*FinalReportResponse, error)
	DeclineFinalReportAsRegister(context.Context, *FinalReportRequest) (*FinalReportResponse, error)
	// Согласование
	AcceptFinalReportAsAssignee(context.Context, *FinalReportRequest) (*FinalReportResponse, error)
	DeclineFinalReportAsAssignee(context.Context, *FinalReportRequest) (*FinalReportResponse, error)
	mustEmbedUnimplementedOutmemberServiceServer()
}

// UnimplementedOutmemberServiceServer must be embedded to have forward compatible implementations.
type UnimplementedOutmemberServiceServer struct {
}

func (UnimplementedOutmemberServiceServer) AcceptBookingAsRegister(context.Context, *BookingRequest) (*BookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptBookingAsRegister not implemented")
}
func (UnimplementedOutmemberServiceServer) DeclineBookingAsRegister(context.Context, *BookingRequest) (*BookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineBookingAsRegister not implemented")
}
func (UnimplementedOutmemberServiceServer) AcceptBookingAsAssignee(context.Context, *BookingRequest) (*BookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptBookingAsAssignee not implemented")
}
func (UnimplementedOutmemberServiceServer) DeclineBookingAsAssignee(context.Context, *BookingRequest) (*BookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineBookingAsAssignee not implemented")
}
func (UnimplementedOutmemberServiceServer) AcceptRoomAsRegister(context.Context, *RoomRequest) (*RoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptRoomAsRegister not implemented")
}
func (UnimplementedOutmemberServiceServer) DeclineRoomAsRegister(context.Context, *RoomRequest) (*RoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineRoomAsRegister not implemented")
}
func (UnimplementedOutmemberServiceServer) AcceptRoomAsAssignee(context.Context, *RoomRequest) (*RoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptRoomAsAssignee not implemented")
}
func (UnimplementedOutmemberServiceServer) DeclineRoomAsAssignee(context.Context, *RoomRequest) (*RoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineRoomAsAssignee not implemented")
}
func (UnimplementedOutmemberServiceServer) AcceptFinalReportAsRegister(context.Context, *FinalReportRequest) (*FinalReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptFinalReportAsRegister not implemented")
}
func (UnimplementedOutmemberServiceServer) DeclineFinalReportAsRegister(context.Context, *FinalReportRequest) (*FinalReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineFinalReportAsRegister not implemented")
}
func (UnimplementedOutmemberServiceServer) AcceptFinalReportAsAssignee(context.Context, *FinalReportRequest) (*FinalReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptFinalReportAsAssignee not implemented")
}
func (UnimplementedOutmemberServiceServer) DeclineFinalReportAsAssignee(context.Context, *FinalReportRequest) (*FinalReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineFinalReportAsAssignee not implemented")
}
func (UnimplementedOutmemberServiceServer) mustEmbedUnimplementedOutmemberServiceServer() {}

// UnsafeOutmemberServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OutmemberServiceServer will
// result in compilation errors.
type UnsafeOutmemberServiceServer interface {
	mustEmbedUnimplementedOutmemberServiceServer()
}

func RegisterOutmemberServiceServer(s grpc.ServiceRegistrar, srv OutmemberServiceServer) {
	s.RegisterService(&OutmemberService_ServiceDesc, srv)
}

func _OutmemberService_AcceptBookingAsRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).AcceptBookingAsRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/AcceptBookingAsRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).AcceptBookingAsRegister(ctx, req.(*BookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_DeclineBookingAsRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).DeclineBookingAsRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/DeclineBookingAsRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).DeclineBookingAsRegister(ctx, req.(*BookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_AcceptBookingAsAssignee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).AcceptBookingAsAssignee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/AcceptBookingAsAssignee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).AcceptBookingAsAssignee(ctx, req.(*BookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_DeclineBookingAsAssignee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).DeclineBookingAsAssignee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/DeclineBookingAsAssignee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).DeclineBookingAsAssignee(ctx, req.(*BookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_AcceptRoomAsRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).AcceptRoomAsRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/AcceptRoomAsRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).AcceptRoomAsRegister(ctx, req.(*RoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_DeclineRoomAsRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).DeclineRoomAsRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/DeclineRoomAsRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).DeclineRoomAsRegister(ctx, req.(*RoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_AcceptRoomAsAssignee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).AcceptRoomAsAssignee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/AcceptRoomAsAssignee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).AcceptRoomAsAssignee(ctx, req.(*RoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_DeclineRoomAsAssignee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).DeclineRoomAsAssignee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/DeclineRoomAsAssignee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).DeclineRoomAsAssignee(ctx, req.(*RoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_AcceptFinalReportAsRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).AcceptFinalReportAsRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/AcceptFinalReportAsRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).AcceptFinalReportAsRegister(ctx, req.(*FinalReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_DeclineFinalReportAsRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).DeclineFinalReportAsRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/DeclineFinalReportAsRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).DeclineFinalReportAsRegister(ctx, req.(*FinalReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_AcceptFinalReportAsAssignee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).AcceptFinalReportAsAssignee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/AcceptFinalReportAsAssignee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).AcceptFinalReportAsAssignee(ctx, req.(*FinalReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutmemberService_DeclineFinalReportAsAssignee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutmemberServiceServer).DeclineFinalReportAsAssignee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.OutmemberService/DeclineFinalReportAsAssignee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutmemberServiceServer).DeclineFinalReportAsAssignee(ctx, req.(*FinalReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OutmemberService_ServiceDesc is the grpc.ServiceDesc for OutmemberService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OutmemberService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "booking.OutmemberService",
	HandlerType: (*OutmemberServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcceptBookingAsRegister",
			Handler:    _OutmemberService_AcceptBookingAsRegister_Handler,
		},
		{
			MethodName: "DeclineBookingAsRegister",
			Handler:    _OutmemberService_DeclineBookingAsRegister_Handler,
		},
		{
			MethodName: "AcceptBookingAsAssignee",
			Handler:    _OutmemberService_AcceptBookingAsAssignee_Handler,
		},
		{
			MethodName: "DeclineBookingAsAssignee",
			Handler:    _OutmemberService_DeclineBookingAsAssignee_Handler,
		},
		{
			MethodName: "AcceptRoomAsRegister",
			Handler:    _OutmemberService_AcceptRoomAsRegister_Handler,
		},
		{
			MethodName: "DeclineRoomAsRegister",
			Handler:    _OutmemberService_DeclineRoomAsRegister_Handler,
		},
		{
			MethodName: "AcceptRoomAsAssignee",
			Handler:    _OutmemberService_AcceptRoomAsAssignee_Handler,
		},
		{
			MethodName: "DeclineRoomAsAssignee",
			Handler:    _OutmemberService_DeclineRoomAsAssignee_Handler,
		},
		{
			MethodName: "AcceptFinalReportAsRegister",
			Handler:    _OutmemberService_AcceptFinalReportAsRegister_Handler,
		},
		{
			MethodName: "DeclineFinalReportAsRegister",
			Handler:    _OutmemberService_DeclineFinalReportAsRegister_Handler,
		},
		{
			MethodName: "AcceptFinalReportAsAssignee",
			Handler:    _OutmemberService_AcceptFinalReportAsAssignee_Handler,
		},
		{
			MethodName: "DeclineFinalReportAsAssignee",
			Handler:    _OutmemberService_DeclineFinalReportAsAssignee_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "outmember_service.proto",
}
